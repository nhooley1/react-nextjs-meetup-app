{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nicholashooley/Documents/practice-react-folder/react-nextjs-meetup-app/pages/index.js\";\nimport { useEffect, useState } from 'react';\nimport MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\nimport { DB_CREDENTIALS } from '../../db-credentials/db-credentials'; // doesnt include server side imports in front end bundle, next.js detects this.\n// const DUMMY_MEETUPS = [\n//   {\n//     id: 'm1',\n//     title: '1st meetup',\n//     image:\n//       'https://www.tripsavvy.com/thmb/6qw_gIgao_S0HDGTpQJkNAN8UN0=/900x0/filters:no_upscale():max_bytes(150000):strip_icc():gifv():format(webp)/GettyImages-4540860191-59930af8396e5a0010a21cde.jpg',\n//     address: 'Snowdonia',\n//     description: 'Welsh hills',\n//   },\n//   {\n//     id: 'm2',\n//     title: '2nd meetup',\n//     image:\n//       'https://www.coppermines.co.uk/wp-content/uploads/2021/04/Lake-District-Cottages-Fantastic-Facts-About-the-Lake-District-Blog-Image.jpg',\n//     address: 'Lake District',\n//     description: 'English hills',\n//   },\n// ];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n} // doesnt execute on the client, unlike useEffect.\n// fixes the html in devtools not been shown due to useEffect working on second re-render cycle.\n// data fetching for pre rendering.\n// ONLY WORKING - for pages files, not in components.\n// is a pre-rendering process - calls BEFORE calling component function.\n// executed during build process.\n// SEO improvements.\n// fetch data from an API etc.\n// need to return an object.\n// return a props object, has to be called props/\n// revalidate: 10 etc\n// updated after deployment\n// responsible for regeneration, on the server, post deployment\n// value is in seconds\n\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(`mongodb+srv://${DB_CREDENTIALS.username}:${DB_CREDENTIALS.password}@cluster0.gcbnc5v.mongodb.net/meetups?retryWrites=true&w=majority`);\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 10\n  };\n} // Rus on server, like getStaticProps, but runs on client, after deployment.\n// this is preferable to getStaticProps when you have mulitple updates per second, otherwise getStaticProps is better.\n// get access to req / res, unlike getStaticProps\n// export async function getServerSideProps(context) {\n//   context.req = context.req;\n//   const res = context.res;\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/nicholashooley/Documents/practice-react-folder/react-nextjs-meetup-app/pages/index.js"],"names":["useEffect","useState","MeetupList","MongoClient","DB_CREDENTIALS","HomePage","props","meetups","getStaticProps","client","connect","username","password","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,SAASC,cAAT,QAA+B,qCAA/B,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CAClB,iBAAgBN,cAAc,CAACO,QAAS,IAAGP,cAAc,CAACQ,QAAS,mEADjD,CAArB;AAIA,QAAMC,EAAE,GAAGJ,MAAM,CAACI,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMR,OAAO,GAAG,MAAMO,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLZ,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACY,GAAR,CAAaC,MAAD,KAAa;AAChCC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADkB;AAEhCC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFgB;AAGhCC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHkB;AAIhCC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ4B,OAAb,CAAZ;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE;AATP,GAAP;AAWD,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAetB,QAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\nimport { DB_CREDENTIALS } from '../../db-credentials/db-credentials';\n\n// doesnt include server side imports in front end bundle, next.js detects this.\n\n// const DUMMY_MEETUPS = [\n//   {\n//     id: 'm1',\n//     title: '1st meetup',\n//     image:\n//       'https://www.tripsavvy.com/thmb/6qw_gIgao_S0HDGTpQJkNAN8UN0=/900x0/filters:no_upscale():max_bytes(150000):strip_icc():gifv():format(webp)/GettyImages-4540860191-59930af8396e5a0010a21cde.jpg',\n//     address: 'Snowdonia',\n//     description: 'Welsh hills',\n//   },\n//   {\n//     id: 'm2',\n//     title: '2nd meetup',\n//     image:\n//       'https://www.coppermines.co.uk/wp-content/uploads/2021/04/Lake-District-Cottages-Fantastic-Facts-About-the-Lake-District-Blog-Image.jpg',\n//     address: 'Lake District',\n//     description: 'English hills',\n//   },\n// ];\n\nfunction HomePage(props) {\n  return <MeetupList meetups={props.meetups}></MeetupList>;\n}\n\n// doesnt execute on the client, unlike useEffect.\n// fixes the html in devtools not been shown due to useEffect working on second re-render cycle.\n// data fetching for pre rendering.\n// ONLY WORKING - for pages files, not in components.\n// is a pre-rendering process - calls BEFORE calling component function.\n// executed during build process.\n// SEO improvements.\n// fetch data from an API etc.\n// need to return an object.\n// return a props object, has to be called props/\n// revalidate: 10 etc\n// updated after deployment\n// responsible for regeneration, on the server, post deployment\n// value is in seconds\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\n    `mongodb+srv://${DB_CREDENTIALS.username}:${DB_CREDENTIALS.password}@cluster0.gcbnc5v.mongodb.net/meetups?retryWrites=true&w=majority`\n  );\n\n  const db = client.db();\n\n  const meetupsCollection = db.collection('meetups');\n\n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n\n  return {\n    props: {\n      meetups: meetups.map((meetup) => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString(),\n      })),\n    },\n    revalidate: 10,\n  };\n}\n\n// Rus on server, like getStaticProps, but runs on client, after deployment.\n// this is preferable to getStaticProps when you have mulitple updates per second, otherwise getStaticProps is better.\n// get access to req / res, unlike getStaticProps\n\n// export async function getServerSideProps(context) {\n//   context.req = context.req;\n//   const res = context.res;\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}